stages:
  - preparation
  - routing
  - building
  - testing
  - security

# Variables
variables:
  POSTGRES_DB: spaqs
  POSTGRES_USER: spaqs-user
  POSTGRES_PASSWORD: spaqs-password
  DB_HOST: postgres

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  image: addeanz/compose:latest
  script:
    - php -v
    - apk add --no-cache libjpeg
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate

route:
  stage: routing
  image: addeanz/compose:latest
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
    - php artisan route:cache

yarn:
  stage: preparation
  image: node:14.18.3-buster-slim
  script:
    - yarn --version
    - yarn install --pure-lockfile
  cache:
    paths:
      - node_modules/

build-assets:
  stage: building
  image: edbizarro/gitlab-ci-pipeline-php:8.0
  # Download the artifacts for these jobs
  dependencies:
    - composer
    - yarn
  script:
    - npm --version
    - npm install
    - npm run production --progress false

db-seeding:
  stage: building
  services:
    - postgres:latest
  image: addeanz/nginx
  dependencies:
    - composer
    - yarn
  script:
    - cp .env.example .env
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - php artisan migrate:fresh --seed

phpunit:
  stage: testing
  image: addeanz/nginx
  services:
    - postgres:latest
  dependencies:
    - build-assets
    - composer
    - db-seeding
  script:
    - apk add npm
    - npm install
    - npm run production --progress false
    - cp .env.example .env
    - echo "" | tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - php artisan key:generate
    - php artisan migrate:fresh --seed
    - ./vendor/phpunit/phpunit/phpunit --version
    - ./vendor/phpunit/phpunit/phpunit

codestyle:
  stage: testing
  image: lorisleiva/laravel-docker:8.0
  script:
    - phpcs -n --extensions=php app
  dependencies: []

phpcpd:
  stage: testing
  image: addeanz/nginx
  script:
    - cp .env.example .env
    - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
    - php phpcpd.phar app/ --min-lines=50
  dependencies: []
  cache:
    paths:
      - phpcpd.phar

jest:
  image: node:latest
  stage: testing
  script:
    - npm install --progress=false
    - npm i -g jest
    - npm run test

eslint:
  image: node:latest
  stage: testing
  before_script:
    - yarn
  script:
    - yarn eslint

security-checker:
  stage: security
  image: addeanz/nginx
  script:
    - apk add wget
    - wget https://github.com/fabpot/local-php-security-checker/releases/download/v1.2.0/local-php-security-checker_1.2.0_linux_amd64
    - chmod 775 local-php-security-checker_1.2.0_linux_amd64
    - composer -v
    - ./local-php-security-checker_1.2.0_linux_amd64 --path=composer.lock

nodejsscan:
  stage: security
  image: python:3.7
  script:
    - pip install nodejsscan
    - nodejsscan -d resources/js -o scanresult.json
