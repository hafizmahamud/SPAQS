<?php
namespace App\Http\Livewire\Frontend;

// phpcs:ignoreFile -- this fail is generated by Laravel
/**
 * SenaraiNomborPerolehanTunasTable File.
 *
 * PHP Version 8.0
 *
 * @category SenaraiNomborPerolehanTunasTable
 * @package  SenaraiNomborPerolehanTunasTable
 * @author   Mimi Khalid <mimi@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
use App\Domains\Auth\Models\User;
use Modules\Sisdant\Models\PermohonanNomborPerolehan;
use Modules\Sisdant\Models\IklanPerolehan;
use Modules\Sisdant\Models\MatrikIklan;
use App\Models\Pejabat;
use Modules\Sisdant\Models\JenisIklan;
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use Rappasoft\LaravelLivewireTables\Views\Filter;
use Carbon\Carbon;

// use Livewire\Component;
/**
 * Class SenaraiNomborPerolehanTunasTable.
 *
 * @category SenaraiNomborPerolehanTunasTable
 * @package  SenaraiNomborPerolehanTunasTable
 * @author   Mimi Khalid <mimi@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
class SenaraiNomborPerolehanTunasTable extends DataTableComponent
{
    public string $emptyMessage = 'Tiada Data';

    public function columns(): array
    {
        return [
            Column::make(__('Bil')),
            Column::make(__('Tarikh Permohonan'), 'created_at')
            ->sortable(),
                // ->sortable(function(Builder $query, $direction) {
                //     return $query->orderBy(PermohonanNomborPerolehan::select('updated_at')->whereColumn('iklan_perolehan.mohon_no_perolehan_id', 'mohon_no_perolehan.id_perolehan'), $direction);
                // }),
            Column::make(__('Nombor Perolehan / Projek'))
            ->sortable(function(Builder $query, $direction) {
                return $query->orderBy(PermohonanNomborPerolehan::select('no_perolehan')->whereColumn('iklan_perolehan.mohon_no_perolehan_id', 'mohon_no_perolehan.id_perolehan'), $direction);
            })
            ->searchable(function (Builder $query, $term) {
            return $query->where(
                fn ($query) => $query->whereHas('mohonNoPerolehan', fn($query) => $query
                        ->where('no_perolehan', 'ilike', '%'.$term.'%')
                        ->orWhere('tajuk_perolehan', 'ilike', '%'.$term.'%')
                    )
                );
            }),
            Column::make(__('Nama Pemohon')),
            Column::make(__('Jenis Perolehan')),
            Column::make(__('Tarikh Iklan')),
        ];
    }
    /**
     * Builder
     *
     * @return Builder
     */
    public function query(): Builder
    {
        //Jenis
        $query = IklanPerolehan::with('user', 'mohonNoPerolehan.matrikIklan.jenisIklan')->whereIn('status_iklan_id', [2, 3, 4])
                ->where('tarikh_keluar_iklan', '>', Carbon::now()->format('Y-m-d'))
                ->whereHas('user', fn($query) => $query
                    ->Where('deleted_at', null)
                    )
                ->orderBy('iklan_perolehan.created_at', 'asc');
        return $query
            ->when($this->getFilter('jenis_iklan'), fn($query, $tags) => $query ->whereHas('mohonNoPerolehan.matrikIklan', fn($query) => $query->whereIn('matrik_iklan.jenis_iklan_id', $tags)));
    }

    /**
     * Filter jenis iklan
     *
     * @return array
     */
    public function filters(): array
    {
        return [
            'jenis_iklan' => Filter::make('JENIS PEROLEHAN')
                ->multiSelect(
                    JenisIklan::query()
                    ->orderBy('nama')
                    ->get()
                    ->keyBy('id')
                    ->map(fn($tag) => $tag->nama)
                    ->toArray()
                ),
        ];
    }

    public function rowView(): string
    {
        return 'livewire.frontend.senarai_perolehan_tunas';
    }
}
