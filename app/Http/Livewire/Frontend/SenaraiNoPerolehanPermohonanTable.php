<?php
namespace App\Http\Livewire\Frontend;

// phpcs:ignoreFile -- this fail is generated by Laravel
/**
 * SenaraiNoPerolehanPermohonanTable File.
 *
 * PHP Version 8.0
 *
 * @category SenaraiNoPerolehanPermohonanTable
 * @package  SenaraiNoPerolehanPermohonanTable
 * @author   Aina Zuhairah <aina@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
use App\Domains\Auth\Models\User;
use Modules\Sisdant\Models\PermohonanNomborPerolehan;
use Modules\Sisdant\Models\MatrikIklan;
use App\Models\Pejabat;
use App\Models\Negeri;
use Modules\Sisdant\Models\JenisIklan;
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use Rappasoft\LaravelLivewireTables\Views\Filter;
use Carbon\Carbon;

/**
 * Class SenaraiNoPerolehanPermohonanTable.
 *
 * @category SenaraiNoPerolehanPermohonanTable
 * @package  SenaraiNoPerolehanPermohonanTable
 * @author   Aina Zuhairah <aina@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
class SenaraiNoPerolehanPermohonanTable extends DataTableComponent
{
    public $user_id;
    public string $emptyMessage = 'Tiada Data';

    public function columns(): array
    {
        return [
            Column::make(__('Bil'), 'id_perolehan')
                ->sortable(),
            Column::make(__('Jabatan'))
                ->sortable(function(Builder $query, $direction) {
                    return $query->orderBy(Pejabat::select('bahagian')->whereColumn('mohon_no_perolehan.section_id', 'pejabat.id'), $direction);
                }),
            Column::make(__('Tajuk'), 'no_perolehan')
                ->sortable()
                ->searchable(function (Builder $query, $term) {
                    return $query->where(
                        fn ($query) => $query->where('no_perolehan', 'ilike', '%'.$term.'%')
                            ->orWhere('tajuk_perolehan', 'ilike', '%'.$term.'%')
                    );
                }),
            Column::make(__('Jenis Perolehan'))
                ->sortable(function(Builder $query, $direction) {
                    return $query->join('matrik_iklan', 'mohon_no_perolehan.matrik_iklan_id', '=', 'matrik_iklan.id')
                        ->orderBy(JenisIklan::select('nama')->whereColumn('matrik_iklan.jenis_iklan_id', 'jenis_iklan.id'), $direction);
                }),
            Column::make(__('Status'))

        ];
    }
     /**
     * Mount
     *
     * @param int $id comment about this variable
     *
     * @return string
     */

    public function mount($id)
    {
        $this->user_id = $id;
    }

    /**
     * Builder
     *
     * @return Builder
     */
    public function query(): Builder
    {
        $query = PermohonanNomborPerolehan::with('section', 'matrikIklan.jenisIklan', 'negeri')->where('user_id', $this->user_id)->where('status', '!=', 'iklan')->where('status', '!=', 'selesai')->orderBy('created_at', 'asc');
        return $query
            ->when($this->getFilter('jenis_iklan'), fn($query, $tags) => $query->join('matrik_iklan', 'mohon_no_perolehan.matrik_iklan_id', '=', 'matrik_iklan.id')->whereHas('matrikIklan', fn($query) => $query->whereIn('matrik_iklan.jenis_iklan_id', $tags)));
    }

    /**
     * Filter jenis iklan
     *
     * @return array
     */
    public function filters(): array
    {
        return [
            'jenis_iklan' => Filter::make('JENIS PEROLEHAN')
                ->multiSelect(
                    JenisIklan::query()
                    ->orderBy('nama')
                    ->get()
                    ->keyBy('id')
                    ->map(fn($tag) => $tag->nama)
                    ->toArray()
                ),
        ];
    }

    public function rowView(): string
    {
        return 'livewire.frontend.senarai-no-perolehan-permohonan-table';
    }
}
