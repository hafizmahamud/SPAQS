<?php
namespace App\Http\Livewire\Frontend;

// phpcs:ignoreFile -- this fail is generated by Laravel
/**
 * senaraiPetenderTable File.
 *
 * PHP Version 8.0
 *
 * @category senaraiPetenderTable
 * @package  senaraiPetenderTable
 * @author   Mimi Khalid <mimi@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
use App\Domains\Auth\Models\User;
use Modules\Sisdant\Models\PermohonanNomborPerolehan;
use Modules\Sisdant\Models\IklanPerolehan;
use Modules\Sisdant\Models\MatrikIklan;
use Modules\Tunas\Models\BorangDaftarMinat;
use App\Models\Pejabat;
use App\Models\Negeri;
use Modules\Sisdant\Models\JenisIklan;
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use Rappasoft\LaravelLivewireTables\Views\Filter;
use Carbon\Carbon;
use Symfony\Component\Routing\Route as SymfonyRoute;
// use Livewire\Component;
/**
 * Class senaraiPetenderTable.
 *
 * @category senaraiPetenderTable
 * @package  senaraiPetenderTable
 * @author   Mimi Khalid <mimi@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
class SenaraiPetenderTable extends DataTableComponent
{
    public string $defaultSortColumn = 'created_at';
    public string $defaultSortDirection = 'asc';
    public string $emptyMessage = 'Tiada Data';

    public function columns(): array
    {
        return [
            Column::make(__('Bil')),
            Column::make(__('Nama Syarikat'), 'nama_syarikat')
            ->sortable(),
            Column::make(__('Tarikh Tamat Pendaftaran SPKK'), 'tarikh_tamat_spkk')
            ->sortable(),
            Column::make(__('Emel Rasmi'),'emel_rasmi')
            ->sortable(),
            Column::make(__('Status'), 'status_petender')
            ->sortable(),
            Column::make(__('Resit'), 'status_resit')
            ->sortable(),
        ];
    }

    public $currentUrl;

    public function mount()
    {
        $url = url()->current();
        $values = parse_url($url);
        $path = explode('/',$values['path']);
        $this->iklanPerolehanId = $path[3];
    }

    /**
     * Builder
     *
     * @return Builder
     */
    public function query(): Builder
    {
        $query = BorangDaftarMinat::where('iklan_perolehan_id', $this->iklanPerolehanId);
     
        return $query;
    }


    public function rowView(): string
    {
        return 'livewire.frontend.senarai_petender';
    }
}
