<?php
namespace App\Http\Livewire\Frontend;

// phpcs:ignoreFile -- this fail is generated by Laravel
/**
 * SenaraiPetenderBerjayaPublicTable File.
 *
 * PHP Version 8.0
 *
 * @category SenaraiPetenderBerjayaPublicTable
 * @package  SenaraiPetenderBerjayaPublicTable
 * @author   Hafiz Mahamud <hafiz@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use Rappasoft\LaravelLivewireTables\Views\Filter;

use Modules\Awas\Models\PenilaianPerolehan;
use Modules\Awas\Models\DokumenKontrak;
use Modules\Sisdant\Models\IklanPerolehan;

// use Livewire\Component;
/**
 * Class SenaraiPetenderBerjayaPublicTable.
 *
 * @category SenaraiPetenderBerjayaPublicTable
 * @package  SenaraiPetenderBerjayaPublicTable
 * @author   Hafiz Mahamud <hafiz@plisca.com.my>
 * @license  http://www.gnu.org/copyleft/gpl.html GNU General Public License
 * @link     https://www.plisca.com.my/
 */
class SenaraiPetenderBerjayaPublicTable extends DataTableComponent
{
    //public $user_id;
    public string $emptyMessage = 'Tiada Data';


    /**
     * Builder
     *
     * @return Builder
     */
    public function query(): Builder
    {
        $query = PenilaianPerolehan::where('status_penilaian', 'syor_tamat')
        ->with('iklanPerolehan.user')
        ->whereHas(
            'iklanPerolehan.user', function ($query) {
                    $query->where('deleted_at', null);
            }
        )
        ->with('iklanPerolehan.mohonNoPerolehan.negeri')
        ->with('iklanPerolehan.dokumenKontrak');

        return $query;

    }


        /**
     * Column
     *
     * @return column
     */
    public function columns(): array
    {
        return [
            Column::make('Bil','id')
            ->sortable(),
            Column::make('Negeri')
            ->sortable(function(Builder $query, $direction) {
                return $query->join('mohon_no_perolehan', 'mohon_no_perolehan.id_perolehan', '=', 'iklan_perolehan.mohon_no_perolehan_id')
                    ->orderBy(Negeri::select('negeri')->whereColumn('negeri.id', 'mohon_no_perolehan.negeri_id'), $direction);
            }),
            Column::make(__('No Tender/Projek'))
            ->sortable(function(Builder $query, $direction) {
                return $query->orderBy(PermohonanNomborPerolehan::select('no_perolehan')->whereColumn('mohon_no_perolehan.id_perolehan', 'iklan_perolehan.mohon_no_perolehan_id'), $direction);
            })
            ->searchable(function (Builder $query, $term) {
                return $query->where(
                    fn ($query) => $query->whereHas('iklanPerolehan.mohonNoPerolehan', fn($query) => $query
                            ->where('no_perolehan', 'ilike', '%'.$term.'%')
                            ->orWhere('tajuk_perolehan', 'ilike', '%'.$term.'%')
                        )
                    );
                }),
            Column::make('Tarikh Kemaskini Keputusan LP','tarikh_kemaskini_penilaian')
                ->sortable(),
            Column::make('Tarikh Tamat Sah Tender','tarikh_terima_result'),
            Column::make('Tarikh Tandatangan SST'),
        ];
    }

    


    public function rowView(): string
    {
        return 'livewire.frontend.senarai_petender_berjaya_public';
    }
}
